// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackerDB;

namespace TrackerDB.Migrations
{
    [DbContext(typeof(TrackerDbContext))]
    [Migration("20191105174213_AddStoreDetailAndTags")]
    partial class AddStoreDetailAndTags
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TrackerDB.Entities.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountBalance");

                    b.Property<string>("AccountType");

                    b.Property<long?>("BankId");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<string>("Tags");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TrackerDB.Entities.Bank", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankUrl");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<string>("Tags");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("TrackerDB.Entities.StoreDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("StoreAddress");

                    b.Property<string>("Tags");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.ToTable("StoreDetails");
                });

            modelBuilder.Entity("TrackerDB.Entities.Transaction", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.Property<string>("Category1")
                        .IsRequired();

                    b.Property<string>("Description");

                    b.Property<byte[]>("Receipt");

                    b.Property<long?>("StoreDetailId");

                    b.Property<string>("StoreName");

                    b.Property<string>("StoreTransactionID");

                    b.Property<string>("Tags");

                    b.Property<double>("TransactionAmount");

                    b.Property<DateTimeOffset>("TransactionDateTime");

                    b.Property<string>("UserName");

                    b.HasKey("id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Category1");

                    b.HasIndex("StoreDetailId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("TrackerDB.Entities.TransactionCategory", b =>
                {
                    b.Property<string>("Category")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Credit");

                    b.Property<string>("Description");

                    b.HasKey("Category");

                    b.ToTable("TransactionCategory");
                });

            modelBuilder.Entity("TrackerDB.Entities.Account", b =>
                {
                    b.HasOne("TrackerDB.Entities.Bank")
                        .WithMany("Accounts")
                        .HasForeignKey("BankId");
                });

            modelBuilder.Entity("TrackerDB.Entities.Transaction", b =>
                {
                    b.HasOne("TrackerDB.Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TrackerDB.Entities.TransactionCategory", "Category")
                        .WithMany()
                        .HasForeignKey("Category1")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TrackerDB.Entities.StoreDetails", "StoreDetail")
                        .WithMany()
                        .HasForeignKey("StoreDetailId");
                });
#pragma warning restore 612, 618
        }
    }
}
